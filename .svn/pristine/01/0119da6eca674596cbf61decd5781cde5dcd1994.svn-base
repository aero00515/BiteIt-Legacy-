package edu.utboy.biteit.ui.pages;

import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.viewpagerindicator.CirclePageIndicator;

import edu.utboy.biteit.R;
import edu.utboy.biteit.models.Friend;
import edu.utboy.biteit.models.PhotoComment;

public class FriendsInfoAdapter extends BaseAdapter {

	private Activity activity;
	private Context context;
	private List<FriendPhotoComment> friendPhotoComments;

	public FriendsInfoAdapter(Activity activity,
			List<FriendPhotoComment> friendPhotoComments) {
		this.activity = activity;
		this.context = activity.getApplicationContext();
		this.friendPhotoComments = friendPhotoComments;
	}

	@Override
	public int getCount() {
		return friendPhotoComments.size();
	}

	@Override
	public Object getItem(int position) {
		return friendPhotoComments.get(position);
	}

	@Override
	public long getItemId(int position) {
		return friendPhotoComments.get(position).getFriend().getId();
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		if (convertView == null) {
			convertView = activity.getLayoutInflater().inflate(
					R.layout.fragment_friends_info, parent, false);
			FriendPhotoComment friendPhotoComment = (FriendPhotoComment) getItem(position);
			Friend friend = friendPhotoComment.getFriend();
			List<PhotoComment> photoComments = friendPhotoComment
					.getPhotoComments();
			TextView friendComment = (TextView) convertView
					.findViewById(R.id.fragment_friends_info_comment);
			ImageView friendPhoto = (ImageView) convertView
					.findViewById(R.id.fragment_friends_info_profile_pic);
			TextView friendName = (TextView) convertView
					.findViewById(R.id.fragment_friends_info_name);

			ImageLoader.getInstance().displayImage(friend.getPhoto(),
					friendPhoto);
			ViewPager photoCommentViewpager = (ViewPager) convertView
					.findViewById(R.id.fragment_friends_info_pic_pager);
			CirclePageIndicator cpi = (CirclePageIndicator) convertView
					.findViewById(R.id.fragment_friends_info_indicator);
			FriendPhotoCommentAdapter mFriendPhotoCommentAdapter = new FriendPhotoCommentAdapter(
					friendComment, photoComments);
			friendName.setText(friend.getName());
			photoCommentViewpager.setAdapter(mFriendPhotoCommentAdapter);
			cpi.setViewPager(photoCommentViewpager);
		}
		return convertView;
	}

	public class FriendPhotoComment {
		private List<PhotoComment> photoComments;
		private Friend friend;

		public Friend getFriend() {
			return friend;
		}

		public void setFriend(Friend friend) {
			this.friend = friend;
		}

		public List<PhotoComment> getPhotoComments() {
			return photoComments;
		}

		public void setPhotoComments(List<PhotoComment> photoComments) {
			this.photoComments = photoComments;
		}
	}

	private class FriendPhotoCommentAdapter extends PagerAdapter {

		/**
		 * This view only has one TextView which follows the current photo.
		 */
		private TextView friendComment;
		private List<PhotoComment> photoComments;

		public FriendPhotoCommentAdapter(TextView friendComment,
				List<PhotoComment> photoComments) {
			FriendPhotoCommentAdapter.this.photoComments = photoComments;
		}

		@Override
		public int getCount() {
			return FriendPhotoCommentAdapter.this.photoComments.size();
		}

		@Override
		public boolean isViewFromObject(View view, Object obj) {
			return view == (View) obj;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			container.removeView((View) object);
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			ImageView iv = new ImageView(context);
			PhotoComment photoComment = FriendPhotoCommentAdapter.this.photoComments
					.get(position);
			friendComment.setText(photoComment.getComment());
			ImageLoader.getInstance().displayImage(
					photoComment.getUri().toString(), iv);
			((ViewPager) container).addView(iv);
			return iv;
		}

	}
}
