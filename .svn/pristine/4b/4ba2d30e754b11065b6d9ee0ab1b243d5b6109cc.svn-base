package edu.utboy.biteit;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.nhaarman.listviewanimations.itemmanipulation.expandablelistitem.ExpandableListItemAdapter;
import com.nostra13.universalimageloader.core.ImageLoader;

import edu.utboy.biteit.models.Friend;
import edu.utboy.biteit.models.dao.FriendDAO;
import edu.utboy.biteit.utils.BitmapCache;

public class MyExpandableListItemAdapter extends
		ExpandableListItemAdapter<Friend> {

	private final Activity activity;
	private final BitmapCache mMemoryCache;

	/**
	 * Creates a new ExpandableListItemAdapter with the specified list, or an
	 * empty list if items == null.
	 */
	public MyExpandableListItemAdapter(final Activity activity) {
		super(activity, R.layout.activity_expandablelistitem_card,
				R.id.activity_expandablelistitem_card_title,
				R.id.activity_expandablelistitem_card_content);
		this.activity = activity;
		mMemoryCache = new BitmapCache();

		FriendDAO friendDAO = new FriendDAO(activity);
		friendDAO.open();
		addAll(friendDAO.get());
		friendDAO.close();
	}

	@Override
	public View getTitleView(final int position, View convertView,
			final ViewGroup parent) {
		if (convertView == null) {
			convertView = activity.getLayoutInflater().inflate(
					R.layout.friend_title, parent, false);
		}

		TextView nameText = (TextView) convertView
				.findViewById(R.id.activity_expandablelistitem_profile_name);
		ImageView profilePhoto = (ImageView) convertView
				.findViewById(R.id.activity_expandablelistitem_profile_photo);
		Friend friend = getItem(position);
		nameText.setText(friend.getName());
		ImageLoader.getInstance().displayImage(friend.getPhoto(), profilePhoto);
		ImageView isBlockedImageView = (ImageView) convertView
				.findViewById(R.id.activity_expandablelistitem_is_blocked);
		ImageView isFocusedImageView = (ImageView) convertView
				.findViewById(R.id.activity_expandablelistitem_is_focused);
		isBlockedImageView.setVisibility(friend.isBlocked() ? View.VISIBLE
				: View.GONE);
		isFocusedImageView.setVisibility(friend.isFocued() ? View.VISIBLE
				: View.GONE);
		return convertView;
	}

	@Override
	public View getContentView(final int position, final View convertView,
			final ViewGroup parent) {
		ImageView imageView = (ImageView) convertView;
		if (imageView == null) {
			imageView = new ImageView(activity);
			imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
		}

		int imageResId;
		switch (position % 5) {
		case 0:
			imageResId = R.drawable.img_nature1;
			break;
		case 1:
			imageResId = R.drawable.img_nature2;
			break;
		case 2:
			imageResId = R.drawable.img_nature3;
			break;
		case 3:
			imageResId = R.drawable.img_nature4;
			break;
		default:
			imageResId = R.drawable.img_nature5;
		}

		Bitmap bitmap = getBitmapFromMemCache(imageResId);
		if (bitmap == null) {
			bitmap = BitmapFactory.decodeResource(activity.getResources(),
					imageResId);
			addBitmapToMemoryCache(imageResId, bitmap);
		}
		imageView.setImageBitmap(bitmap);

		return imageView;
	}

	private void addBitmapToMemoryCache(final int key, final Bitmap bitmap) {
		if (getBitmapFromMemCache(key) == null) {
			mMemoryCache.put(key, bitmap);
		}
	}

	private Bitmap getBitmapFromMemCache(final int key) {
		return mMemoryCache.get(key);
	}
}