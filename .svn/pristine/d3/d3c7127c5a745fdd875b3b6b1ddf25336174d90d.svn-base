package edu.utboy.biteit.ui.toturials;

import idv.andylin.tw.andyandroidlibs.utils.MyLog;

import java.util.Arrays;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.facebook.FacebookRequestError;
import com.facebook.HttpMethod;
import com.facebook.Request;
import com.facebook.Response;
import com.facebook.Session;
import com.facebook.model.GraphObject;
import com.facebook.widget.LoginButton;
import com.google.gson.Gson;

import edu.utboy.biteit.R;

public class MultiLoginFragment extends Fragment {

	private OnLoginCallback mOnLoginCallback;

	public MultiLoginFragment(OnLoginCallback mOnLoginCallback) {
		this.mOnLoginCallback = mOnLoginCallback;
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View rootView = inflater.inflate(R.layout.fragment_multi_login,
				container, false);
		LoginButton authButton = (LoginButton) rootView
				.findViewById(R.id.authButton);
		authButton.setFragment(this);
		authButton.setReadPermissions(Arrays.asList("user_friends", "email",
				"user_about_me", "user_location", "user_tagged_places",
				"read_friendlists"));
		return rootView;
	}

	private void doGetUserRequest(Session fbAuthToken) {
		Request request = new Request(fbAuthToken, "/me", null, HttpMethod.GET,
				new Request.Callback() {

					@Override
					public void onCompleted(Response response) {
						GraphObject go = response.getGraphObject();
						FacebookRequestError fre = response.getError();
						if (go != null) {
							String id = go.asMap().get("id").toString();
							String email = go.asMap().get("email").toString();
							String name = go.asMap().get("name").toString();

							Bundle data = new Bundle();
							data.putString(OnLoginCallback.FB_USER_ID, id);
							data.putString(OnLoginCallback.FB_NAME, name);
							data.putString(OnLoginCallback.FB_EMAIL, email);
							data.putString(OnLoginCallback.TEST_GRAPH_USER,
									new Gson().toJson(go.asMap()));
							mOnLoginCallback.onLogin(data);
						} else if (fre != null) {
							MyLog.e(MultiLoginFragment.class,
									fre.getErrorMessage());
						}
					}
				});
		Request.executeBatchAsync(request);
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (Session.getActiveSession().onActivityResult(getActivity(),
				requestCode, resultCode, data)) {
			// is Facebook auth
			if (Session.getActiveSession().isOpened()) {
				doGetUserRequest(Session.getActiveSession());
			}
		} else {
			// others
		}
	}

	public interface OnLoginCallback {
		public static final String FB_USER_ID = "fb_user_id";
		public static final String FB_NAME = "fb_name";
		public static final String FB_EMAIL = "fb_email";
		public static final String TEST_GRAPH_USER = "test_graph_user";

		public void onLogin(Bundle data);
	}
}
